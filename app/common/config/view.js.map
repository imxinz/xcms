{
    "version": 3,
    "sources": [
        "../../../src/common/config/view.js"
    ],
    "names": [
        "type",
        "content_type",
        "file_ext",
        "file_depr",
        "root_path",
        "think",
        "ROOT_PATH",
        "adapter",
        "nunjucks",
        "prerender",
        "env",
        "addFilter",
        "size",
        "delimiter",
        "units",
        "i",
        "Math",
        "round",
        "d",
        "sec",
        "time",
        "date",
        "Date",
        "y",
        "getFullYear",
        "M",
        "getMonth",
        "getDate",
        "h",
        "getHours",
        "m",
        "getMinutes",
        "s",
        "getSeconds",
        "str",
        "parse_config_attr",
        "status",
        "isEmpty",
        "JSON",
        "parse",
        "json",
        "ss",
        "split",
        "arr",
        "isArray",
        "isNumber",
        "in_array",
        "any",
        "get_attribute_type",
        "data",
        "grid",
        "controller",
        "module",
        "get_list_field",
        "wx_bq",
        "emoji",
        "key",
        "img",
        "reg",
        "RegExp",
        "replace",
        "id",
        "val",
        "http",
        "sort_url",
        "getid",
        "sanjiao",
        "extra",
        "dateformat",
        "all",
        "get_action_type",
        "model_id",
        "field",
        "callback",
        "getmodelfield",
        "get_model",
        "uid",
        "get_nickname",
        "name",
        "get_url",
        "cover_id",
        "get_cover",
        "w",
        "obj",
        "v",
        "get_pic",
        "get_cate",
        "price",
        "get_price_format",
        "agent",
        "is_weixin",
        "num",
        "formatCurrency",
        "get_price",
        "flg",
        "sn",
        "newstr",
        "length",
        "tmp",
        "substring",
        "file_id",
        "get_file"
    ],
    "mappings": "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",
    "file": "../../../src/common/config/view.js",
    "sourcesContent": [
        "'use strict';\n/**\n * template config\n */\nexport default {\n  type: 'nunjucks',\n  content_type: 'text/html',\n  file_ext: '.html',\n  file_depr: '_',\n  root_path: think.ROOT_PATH + '/view',\n  adapter: {\n    nunjucks: {\n      prerender: (nunjucks, env) => {\n        /**\n         * 格式化字节大小\n         * @param  number size      字节数\n         * @param  string delimiter 数字和单位分隔符\n         * @return string            格式化后的带单位的大小\n         */\n        env.addFilter(\"format_bytes\", function (size, delimiter = '') {\n          let units = ['B', 'KB', 'MB', 'GB', 'TB', 'PB'];\n          for (var i = 0; size >= 1024 && i < 5; i++) size /= 1024;\n          return Math.round(size * 100) / 100 + delimiter + units[i];\n        });\n\n        /**\n         * 格式化时间\n         */\n        env.addFilter(\"format_time\", function (d, sec) {\n          var time;\n          var date = new Date(d);\n          var y = date.getFullYear();\n          var M = date.getMonth() + 1;\n          M = M < 10 ? \"0\" + M : M;\n          var d = date.getDate();\n          d = d < 10 ? \"0\" + d : d;\n          var h = date.getHours();\n          h = h < 10 ? \"0\" + h : h;\n          var m = date.getMinutes();\n          m = m < 10 ? \"0\" + m : m;\n          var s = date.getSeconds();\n          s = s < 10 ? \"0\" + s : s;\n          if (sec) {\n            time = y + \"-\" + M + \"-\" + d + \" \" + h + \":\" + m + \":\" + s;\n          } else {\n            time = y + \"-\" + M + \"-\" + d + \" \" + h + \":\" + m;\n          }\n          return time;\n        })\n\n        /**\n         *分析枚举类型配置值 格式 a:名称1,b:名称2\n         */\n        env.addFilter(\"parse_config_attr\", function (str) {\n          return parse_config_attr(str)\n        })\n        env.addFilter(\"show_status_op\", function (status) {\n          // 获取数据的状态操作\n          switch (status) {\n            case 0:\n              return '启用';\n              break;\n            case 1:\n              return '禁用';\n              break;\n            case 2:\n              return '审核';\n              break;\n            default:\n              return false;\n              break;\n\n          }\n        })\n        env.addFilter(\"strToJson\", function (str) {\n          if (!think.isEmpty(str) && str !=0) {\n            return JSON.parse(str);\n          }\n        })\n        env.addFilter(\"jsonToStr\", function (json) {\n          if (!think.isEmpty(json)) {\n            return JSON.stringify(json);\n          }\n        })\n        env.addFilter(\"strToArray\", function (str) {\n          if (!think.isEmpty(str)) {\n            let ss = str.split(\",\");// 在每个逗号(,)处进行分解。\n            return ss;\n          }\n        })\n\n        env.addFilter(\"in_Array\", function (str, arr) {\n          arr= arr||0;\n          if (!think.isArray(arr)) {\n            if(think.isNumber(arr)){\n              arr = \"'\"+arr+\"'\";\n            }\n            arr = arr.split(\",\");\n          }\n          //console.log(arr);\n          return in_array(str, arr);\n        })\n\n        env.addFilter(\"isempty\", function (any) {\n          return think.isEmpty(any);\n        })\n\n        //获取字段类型信息\n        env.addFilter(\"get_attribute_type\", function (str) {\n          return get_attribute_type(str);\n        })\n        //格式化字段列表\n        env.addFilter(\"get_list_field\", function (data, grid, controller, module) {\n          return get_list_field(data, grid, controller, module);\n        })\n        //表情图标正则替换\n        env.addFilter(\"get_bq\", function (wx_bq, emoji) {\n          for (let key in emoji) {\n            let img = '<img src=\"https:\\/\\/res.wx.qq.com/mpres/htmledition/images/icon/emotion/' + key + '.gif\" />';\n            let reg = new RegExp('\\\\[' + emoji[key] + '\\\\]', 'g');\n            wx_bq = wx_bq.replace(reg, img);\n          }\n          return wx_bq;\n        })\n        //解析分类信息url\n        env.addFilter(\"sort_url\", function (id,val,arr,http) {\n\n          return sort_url(id,val,arr,http);\n\n        })\n        //解析分类信息当前状态\n        env.addFilter(\"sort_act\",function (id,getid) {\n          //console.log(in_array(id, sanjiao(getid.split(\".\"))));\n          if(!think.isEmpty(getid)){\n            return in_array(id,sanjiao(getid.split(\".\")));\n          }\n\n\n        })\n        /**\n         * 时间戳格式化 dateformat('Y-m-d H:i:s')\n         * @param extra 'Y-m-d H:i:s'\n         * @param date  时间戳\n         * @return  '2015-12-17 15:39:44'\n         */\n        env.addFilter(\"dateformat\", function (extra, date) {\n          return dateformat(date, extra);\n        })\n\n        /**\n         * 获取行为类型\n         * @param intger type 类型\n         * @param bool all 是否返回全部类型\n         * @author arterli <arterli@qq.com>\n         */\n        env.addFilter(\"get_action_type\", function (type, all = false) {\n          return get_action_type(type, all);\n        })\n        /**\n         * 获取模型字段信息\n         * @param model_id 模型id 或 模型名称\n         * @param id 数据id\n         * @param field 字段\n         * @param return 整条数据或字段数据\n         * @author arterli <arterli@qq.com>\n         */\n        env.addFilter(\"getmodelfield\", async(id, model_id, field, callback) => {\n          let data = await getmodelfield(model_id, id, field);\n          callback(null, data);\n        }, true)\n        /**\n         * 获取模型信息\n         * @param model_id 模型id 或 模型名称\n         * @param field 字段\n         * @param return 整条数据或字段数据\n         * @author arterli <arterli@qq.com>\n         */\n        env.addFilter(\"getmode\", async(model_id, field, callback) => {\n          let data = await get_model(model_id, field);\n          callback(null, data);\n        }, true)\n        /**\n         * 获取用户名称\n         */\n        env.addFilter(\"get_nickname\", async(uid, callback) => {\n          let data = await get_nickname(uid);\n          callback(null, data);\n        }, true)\n        /**\n         * 获取文档url\n         */\n        env.addFilter('get_url', (name, id) => {\n          return get_url(name, id)\n        })\n        /**\n         * 获取文档封面图\n         */\n        env.addFilter('get_cover', async(cover_id, field, callback) => {\n\n          let data = await get_cover(cover_id, field);\n          callback(null, data);\n\n        }, true)\n        /**\n         * {{id|get_pic(\"m=1,w=200,h=200\")}}\n         */\n        env.addFilter('get_pic', async(id, type, callback)=> {\n          let m, w, h;\n          //console.log(type);\n          let obj = {};\n          for (let v of type.split(\",\")) {\n            v = v.split(\"=\");\n            obj[v[0]] = v[1];\n          }\n          m = obj.m;\n          w = obj.w;\n          h = obj.h;\n          let data = await get_pic(id, m, w, h);\n          callback(null, data);\n        }, true)\n        /**\n         * 根据栏目id获取栏目信息\n         *\n         */\n        env.addFilter('get_cate', async(id,callback)=> {\n          let data = await get_cate(id);\n          callback(null, data);\n        }, true)\n        //价格格式化\n        env.addFilter(\"get_price_format\", function (price, type) {\n          return get_price_format(price, type);\n        })\n        /**\n         * is_weixin\n         * 判断是否是微信访问\n         */\n        env.addFilter(\"is_weixin\", (agent)=> {\n          return is_weixin(agent);\n        })\n        /**\n         * 将数值四舍五入(保留1位小数)后格式化成金额形式\n         *\n         * @param num 数值(Number或者String)\n         * @return 金额格式的字符串,如'1,234,567.4'\n         * @type String\n         */\n        env.addFilter(\"formatCurrency\", function (num) {\n          if (!think.isEmpty(num)) {\n            return formatCurrency(num);\n          }\n        })\n        /**\n         * 获取商品价格不格式\n         */\n        env.addFilter('get_price', function (price, type) {\n          return get_price(price, type);\n        })\n        /**\n         * 字符串在指定位置插入内容\n         * str表示原字符串变量，flg表示要插入的字符串，sn表示要插入的位置\n         */\n        env.addFilter('insert_flg',(str,flg,sn)=>{\n          var newstr=\"\";\n          for(var i=0;i<str.length;i+=sn){\n            var tmp=str.substring(i, i+sn);\n            newstr+=tmp+flg;\n          }\n          return newstr;\n        })\n        /**\n         * 字符串在指定位截断\n         * str表示原字符串变量，flg表示要插入的字符串，sn表示要截断位置\n         */\n        env.addFilter('block',(str,sn,flg)=>{\n          var newstr=\"\";\n          var tmp=str.substring(0,sn);\n          if(think.isEmpty(flg)){\n            flg=\"...\";\n          }\n          newstr=tmp+flg;\n          return newstr;\n        })\n        /**\n         * 过滤html标签\n         *\n         */\n        env.addFilter('delhtmltags',(str)=>{\n          if(!think.isEmpty(str)) {\n            return str.replace(/<[^>]+>/g, \"\");//去掉所有的html标记\n          }else {\n            return '';\n          }\n        })\n        /**\n         * 获取文件信息\n         * @param file_id 文件id\n         * @param field 字段名,如果为空则返回整个记录集\n         * @returns {*}\n         */\n        env.addFilter('get_file',async (file_id,field,key,callback)=>{\n          let data = await get_file(file_id,field,key);\n          callback(null,data);\n        },true)\n\n        // env.addExtension('tagtest', new mytags(), true);\n        // /**\n        //  * 获取分类标签\n        //  */\n        // env.addExtension('column', new column(), true);\n        // /**\n        //  * 获取导航标签\n        //  */\n        // env.addExtension('channel', new channel(), true);\n        // /**\n        //  * 获取数据标签\n        //  */\n        // env.addExtension('topic', new topic(), true);\n        // /**\n        //  * 获取分类分组\n        //  */\n        // env.addExtension('groups', new groups(), true);\n      }\n    }\n  }\n};"
    ]
}