{
    "version": 3,
    "sources": [
        "../../../src/admin/controller/model.js"
    ],
    "names": [
        "init",
        "http",
        "db",
        "model",
        "indexAction",
        "map",
        "where",
        "page",
        "get",
        "countSelect",
        "data",
        "Pages",
        "think",
        "adapter",
        "pages",
        "assign",
        "meta_title",
        "display",
        "addAction",
        "isPost",
        "post",
        "create_time",
        "Date",
        "valueOf",
        "update_time",
        "status",
        "add",
        "res",
        "cache",
        "success",
        "name",
        "url",
        "active",
        "editAction",
        "isArray",
        "attribute_list",
        "join",
        "update",
        "id",
        "allfields",
        "isEmpty",
        "fail",
        "find",
        "split",
        "model_id",
        "field",
        "select",
        "fields",
        "extend",
        "extend_fields",
        "concat",
        "in_array",
        "is_show",
        "obj",
        "v",
        "field_sort",
        "JSON",
        "parse",
        "group",
        "forEach",
        "k",
        "sort",
        "delAction",
        "ids",
        "del",
        "checknameAction",
        "checkName",
        "json"
    ],
    "mappings": "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",
    "file": "../../../src/admin/controller/model.js",
    "sourcesContent": [
        "'use strict';\n\nimport Base from './base.js';\nimport url from 'url';\n\nexport default class extends Base {\n  init(http){\n    super.init(http);\n    this.db = this.model('model');\n  }\n  /**\n   * index action\n   * @return {Promise} []\n   */\n  async indexAction(){\n    let map = {'status': ['>', -1]}\n    let data = await this.db.where(map).page(this.get('page')).countSelect();\n    let Pages = think.adapter(\"pages\", \"page\"); //加载名为 dot 的 Template Adapter\n    let pages = new Pages(); //实例化 Adapter\n    let page = pages.pages(data);\n    this.assign('pagerData', page); //分页展示使用\n    this.assign('list', data.data);\n    this.meta_title = \"模型管理\";\n    return this.display();\n  }\n\n  /**\n   * 新建模型\n   * @returns {*}\n   */\n  async addAction() {\n    if (this.isPost()) {\n      let data = this.post();\n      //console.log(data);\n      data.create_time = new Date().valueOf();\n      data.update_time = new Date().valueOf();\n      data.status = 1\n      let res = await this.db.add(data);\n      if (res) {\n        this.cache(\"get_document_model\", null);//清除模型缓存\n        return this.success({name: \"添加成功\", url: \"/admin/model/index\"});\n      }\n    } else {\n      this.active = \"admin/model/index\"\n      this.meta_title = \"添加模型\"\n      return this.display()\n    }\n  }\n\n  async editAction(){\n    if (this.isPost()) {\n      let post = this.post()\n      post.update_time = new Date().valueOf();\n      if(think.isArray(post.attribute_list)){\n        post.attribute_list=post.attribute_list.join(\",\");\n      }\n\n      let res =await this.db.update(post);\n      if(res){\n        this.cache(\"get_document_model\", null);//清除模型缓存\n        return this.success({name:\"更新模型成功!\",url: \"/admin/model/index\"})\n      }\n    } else {\n      let id = this.get(\"id\");\n      let allfields;\n      if (think.isEmpty(id)) {\n        this.fail('参数不能为空！');\n      }\n      let data = await this.db.find(id);\n      // console.log(data);\n      data.attribute_list = think.isEmpty(data.attribute_list) ? '' : data.attribute_list.split(\",\");\n      // console.log(data.attribute_list);\n      let fields = await this.model('attribute').where({model_id: data.id}).field('id,name,title,is_show').select();\n      //是否继承了其他模型\n      if (data.extend != 0) {\n        var extend_fields = await this.model('attribute').where({model_id: data.extend}).field('id,name,title,is_show').select();\n        allfields = fields.concat(extend_fields);\n      } else {\n        allfields = fields;\n      }\n      // console.log(allfields)\n      //梳理属性的可见性\n      for (let field of allfields) {\n        if (!think.isEmpty(data.attribute_list) && !in_array(field.id, data.attribute_list)) {\n          field.is_show = 0;\n        }\n        //console.log(field);\n      }\n      //console.log(allfields);\n      //改造数组\n      var obj = {}\n      if (allfields) {\n        for (let v of allfields) {\n          obj[v.id] = v;\n        }\n      } else {\n        for (let v of fields) {\n          obj[v.id] = v;\n        }\n      }\n      //获取模型排序字段\n      let field_sort = JSON.parse(data.field_sort);\n      if (!think.isEmpty(field_sort)) {\n        for (let group in field_sort) {\n          //console.log(field_sort[group])\n          //for(var value of field_sort[group]){\n          //    console.log(value)\n          //}\n\n          field_sort[group].forEach((v, k)=> {\n            if(obj[v]){\n              obj[v].group = group;\n              obj[v].sort = k;\n            }\n            //console.log(v, k)\n          })\n\n        }\n      }\n      // console.log(field_sort);\n      // console.log(obj)\n      this.assign({'fields': fields, 'extend_fields': extend_fields, 'allfields': obj, 'info': data})\n      this.active = \"admin/model/index\"\n      this.meta_title = \"编辑模型\"\n      this.display();\n    }\n  }\n\n  async delAction(){\n    let ids = this.get('id');\n    think.isEmpty(ids) && this.fail(\"参数不能为空\")\n    let res = await this.db.del(ids)\n    if (!res) {\n      this.fail(\"删除失败\");\n    } else {\n      this.cache(\"get_document_model\", null);//清除模型缓存\n      this.success({name: \"删除成功！\"});\n    }\n  }\n\n  /**\n   * 新增字段检查同一张表是否有相同的字段\n   */\n  async checknameAction(){\n    let name = this.get('name');\n    let id = this.get('id');\n    let res = await this.db.checkName(name,id);\n    if(res){\n      return this.json(1);\n    }else {\n      return this.json(0);\n    }\n  }\n}"
    ]
}