{
    "version": 3,
    "sources": [
        "../../../src/admin/controller/base.js"
    ],
    "names": [
        "init",
        "http",
        "setup",
        "locale",
        "__before",
        "is_login",
        "redirect",
        "session",
        "user",
        "assign",
        "islogin",
        "res",
        "think",
        "isEmpty",
        "uid",
        "returnnodes",
        "tree",
        "tree_nodes",
        "nodes",
        "model",
        "field",
        "order",
        "select",
        "list",
        "get_children",
        "editRow",
        "data",
        "where",
        "msg",
        "id",
        "param",
        "isArray",
        "fields",
        "getSchema",
        "in_array",
        "extend",
        "isAjax",
        "update",
        "success",
        "name",
        "url",
        "fail",
        "error",
        "forbid",
        "resume",
        "restore",
        "delete",
        "setstatusAction",
        "self",
        "controller",
        "ids",
        "status",
        "parseInt",
        "map",
        "base"
    ],
    "mappings": "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",
    "file": "../../../src/admin/controller/base.js",
    "sourcesContent": [
        "'use strict';\n\nexport default class extends think.controller.base {\n  /**\n   * some base method in here\n   */\n  init(http){\n    super.init(http);\n    this.setup = this.locale('APPCONFIG')//.WEB_SITE_TITLE = this.config('WEB_SITE_TITLE');\n  }\n  \n  async __before(){\n    //登陆验证\n    let is_login = true; //await this.islogin();\n    if (!is_login) {\n      return this.redirect('/admin/public/signin');\n    }\n    //用户信息\n    this.user = await this.session('userInfo');\n    this.assign(\"userinfo\", this.user);\n    // this.adminmenu = await this.model('menu').adminmenu();\n  }\n\n  /**\n   * 判断是否登录\n   * @returns {boolean}\n   */\n  async islogin() {\n    //判断是否登录\n    let user = await this.session('userInfo');\n    let res = think.isEmpty(user) ? false : user.uid;\n    return res;\n\n  }\n\n  /**\n   * 返回后台节点数据\n   * @param {boolean} tree    是否返回多维数组结构(生成菜单时用到),为false返回一维数组(生成权限节点时用到)\n   * @retrun {array}\n   *\n   * 注意,返回的主菜单节点数组中有'controller'元素,以供区分子节点和主节点\n   */\n  async returnnodes(tree) {\n    tree = tree || true;\n    let http = this.http;\n    //let modelname = http.module;\n    let tree_nodes = [];\n    if (tree && !think.isEmpty(tree_nodes)) {\n      return tree_nodes;\n    }\n    let nodes;\n    if (tree) {\n      var list = await this.model('menu').field('id,pid,title,url,tip,hide').order('sort asc').select();\n      nodes = get_children(list, 0);\n    } else {\n      nodes = await this.model('menu').field('title,url,tip,pid').order('sort asc').select();\n\n    }\n    tree_nodes = nodes;\n    return nodes;\n  }\n\n\n  /**\n   * 对数据表中的单行或多行记录执行修改 GET参数id为数字或逗号分隔的数字\n   *\n   * @param {String} model 模型名称,供M函数使用的参数\n   * @param {Object}  data  修改的数据\n   * @param {Object}  where 查询时的where()方法的参数\n   * @param {Object}  msg   执行正确和错误的消息 {'success':'','error':'', 'url':'','ajax':false}\n   *                      url为跳转页面,ajax是否ajax方式(数字则为倒数计时秒数)\n   */\n  async editRow(model, data, where, msg) {\n    let id = this.param('id');\n    id = think.isArray(id) ? id : id;\n    //如存在id字段，则加入该条件\n    let fields = this.model(model).getSchema();\n    if (in_array('id', fields) && !think.isEmpty(id)) {\n      where = think.extend({ 'id': ['IN', id] }, where);\n    }\n\n    msg = think.extend({ 'success': '操作成功！', 'error': '操作失败！', 'url': '', 'ajax': this.isAjax() }, msg);\n    let res = await this.model(model).where(where).update(data);\n    if (res) {\n      this.success({ name: msg.success, url: msg.url });\n    } else {\n      this.fail(msg.error, msg.url);\n    }\n  }\n\n  /**\n   * 禁用条目\n   * @param {String} model 模型名称,供D函数使用的参数\n   * @param {Object}  where 查询时的 where()方法的参数\n   * @param {Object}  msg   执行正确和错误的消息,可以设置四个元素 {'success':'','error':'', 'url':'','ajax':false}\n   *                     url为跳转页面,ajax是否ajax方式(数字则为倒数计时秒数)\n   */\n  async forbid(model, where, msg) {\n    where = where || {}, msg = msg || { 'success': '状态禁用成功！', 'error': '状态禁用失败！' };\n    let data = { 'status': 0 };\n    await this.editRow(model, data, where, msg);\n  }\n\n  /**\n   * 恢复条目\n   * @param {String} model 模型名称,供D函数使用的参数\n   * @param {Object}  where 查询时的where()方法的参数\n   * @param {Object}  msg   执行正确和错误的消息 {'success':'','error':'', 'url':'','ajax':false}\n   *                     url为跳转页面,ajax是否ajax方式(数字则为倒数计时秒数)\n   */\n  async resume(model, where, msg) {\n    where = where || {}, msg = msg || { 'success': '状态恢复成功！', 'error': '状态恢复失败！' };\n    let data = { 'status': 1 };\n    await this.editRow(model, data, where, msg);\n  }\n\n  /**\n   * 还原条目\n   * @param {string} model 模型名称,供D函数使用的参数\n   * @param {array}  where 查询时的where()方法的参数\n   * @param {array}  msg   执行正确和错误的消息 {'success':'','error':'', 'url':'','ajax':false}\n   *                     url为跳转页面,ajax是否ajax方式(数字则为倒数计时秒数)\n   */\n  async restore(model, where, msg) {\n    where = where || {}, msg = msg || { 'success': '状态还原成功！', 'error': '状态还原失败！' };\n    let data = { 'status': 1 };\n    where = think.extend({ 'status': -1 }, where);\n    await this.editRow(model, data, where, msg);\n  }\n\n  /**\n   * 条目假删除\n   * @param {string} model 模型名称,供D函数使用的参数\n   * @param {array}  where 查询时的where()方法的参数\n   * @param {array} msg   执行正确和错误的消息 {'success':'','error':'', 'url':'','ajax':false}\n   *                     url为跳转页面,ajax是否ajax方式(数字则为倒数计时秒数)\n   */\n  async delete(model, where, msg) {\n    where = where || {}, msg = msg || { 'success': '删除成功！', 'error': '删除失败！' };\n    let data = { 'status': -1 };\n    await this.editRow(model, data, where, msg);\n  }\n\n  /**\n   * 设置一条或者多条数据的状态\n   */\n  async setstatusAction(self, model) {\n    model = model || this.http.controller;\n    let ids = this.param('ids');\n    let status = this.param('status');\n    status = parseInt(status);\n    if (think.isEmpty(ids)) {\n      this.fail(\"请选择要操作的数据\");\n    }\n    let map = { id: ['IN', ids] };\n    //let get = this.get();\n    //this.end(status);\n    switch (status) {\n      case -1:\n        await this.delete(model, map, { 'success': '删除成功', 'error': '删除失败' });\n        break;\n      case 0:\n        await this.forbid(model, map, { 'success': '禁用成功', 'error': '禁用失败' });\n        break;\n      case 1:\n        await this.resume(model, map, { 'success': '启用成功', 'error': '启用失败' });\n        break;\n      default:\n        this.fail('参数错误');\n        break;\n    }\n\n  }\n}"
    ]
}